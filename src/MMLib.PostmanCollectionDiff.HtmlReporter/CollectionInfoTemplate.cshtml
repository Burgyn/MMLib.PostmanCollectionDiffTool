@using DiffPlex.DiffBuilder.Model
@using MMLib.PostmanCollectionDiff.Comparer
@using MMLib.PostmanCollectionDiff.HtmlReporter
@model MMLib.PostmanCollectionDiff.Comparer.CollectionDiffResult

<div class='accordion-item'>
    <h2 class='accordion-header' id='heading-collectioninfo'>
        <button class='accordion-button text-dark' type='button' data-bs-toggle='collapse'
                data-bs-target='#collapse-collectioninfo' aria-expanded='true' aria-controls='collapse-collectioninfo'>
            📃 Collection info - @Model.UpdatedName
        </button>
    </h2>
    <div id='collapse-collectioninfo' class='accordion-collapse collapse' aria-labelledby='heading-collectioninfo'>
        <div class='accordion-body'>
            <div class="container">
                <div class="row margin-bottom-10 ">
                    <div class="col">
                        Original name: @Model.OriginalName
                    </div>
                    <div class="col">
                        Updated name: @Model.UpdatedName
                    </div>
                </div>

                <div class="variables">
                    @{
                        if (Model.Variables.HasDifferences)
                        {
                            <div class="container">
                                <div class="row">
                                    <div class="col">
                                        @{
                                            await IncludeAsync("VariablesTemplate.cshtml",
                                            new VariablesInfo()
                                            {
                                                Type = DiffValueType.Original,
                                                Variables = Model.Variables
                                            });
                                        }
                                    </div>
                                    <div class="col">
                                        @{
                                            await IncludeAsync("VariablesTemplate.cshtml",
                                            new VariablesInfo()
                                            {
                                                Type = DiffValueType.Updated,
                                                Variables = Model.Variables
                                            });
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }

                </div>
            </div>
            @{
                var events = new EventsDiff();
                events.AddEvent(Model.Events);
                await IncludeAsync("EventsTemplate", events);
            }
        </div>
    </div>
</div>
